Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

Using Brute-Force Approach

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int num1_len = nums1.length;
        int num2_len = nums2.length;
        int[] result = new int[num1_len + num2_len];
        int k = 0;
        for(int i=0;i<num1_len;i++){
            result[k++] = nums1[i];
        }
        for(int i=0;i<num2_len;i++){
            result[k++] = nums2[i];
        }
        Arrays.sort(result);
        int total = result.length;
        if(total % 2 == 1){
            return (double)result[total / 2];
        } else{
            int middle1 = result[total / 2 - 1];
            int middle2 = result[total / 2];
            return ((double)middle1 + (double)middle2) / 2.0;
        }
    }
}
