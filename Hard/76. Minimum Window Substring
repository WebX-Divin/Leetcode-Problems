class Solution {
    public String minWindow(String s, String t) {
        int m = s.length();
        int n = t.length();
        if(s == null || t == null || m == 0 || n == 0 || m < n){
            return new String();
        }
        int[] map = new int[128];
        int start = 0, end = 0, minLen = Integer.MAX_VALUE, startIndex = 0;
        for(char ch : t.toCharArray()){
            map[ch]++;
        }
        char[] chS = s.toCharArray();
        while(end < chS.length){
            if(map[chS[end++]]-- > 0){
                n--;
            }
            while(n == 0){
                if(end - start < minLen){
                    startIndex = start;
                    minLen = end - start;
                }
                if(map[chS[start++]]++ == 0){
                    n++;
                }
            }
        }
        return minLen == Integer.MAX_VALUE ? new String() : new String(chS, startIndex, minLen);
    }
}
